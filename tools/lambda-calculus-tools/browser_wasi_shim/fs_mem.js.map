{"version":3,"sources":["../src/fs_mem.ts"],"sourcesContent":["import { debug } from \"./debug.js\";\nimport * as wasi from \"./wasi_defs.js\";\nimport { Fd, Inode } from \"./fd.js\";\n\nexport class OpenFile extends Fd {\n  file: File;\n  file_pos: bigint = 0n;\n\n  constructor(file: File) {\n    super();\n    this.file = file;\n  }\n\n  fd_allocate(offset: bigint, len: bigint): number {\n    if (this.file.size > offset + len) {\n      // already big enough\n    } else {\n      // extend\n      const new_data = new Uint8Array(Number(offset + len));\n      new_data.set(this.file.data, 0);\n      this.file.data = new_data;\n    }\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  fd_fdstat_get(): { ret: number; fdstat: wasi.Fdstat | null } {\n    return { ret: 0, fdstat: new wasi.Fdstat(wasi.FILETYPE_REGULAR_FILE, 0) };\n  }\n\n  fd_filestat_set_size(size: bigint): number {\n    if (this.file.size > size) {\n      // truncate\n      this.file.data = new Uint8Array(\n        this.file.data.buffer.slice(0, Number(size)),\n      );\n    } else {\n      // extend\n      const new_data = new Uint8Array(Number(size));\n      new_data.set(this.file.data, 0);\n      this.file.data = new_data;\n    }\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  fd_read(size: number): { ret: number; data: Uint8Array } {\n    const slice = this.file.data.slice(\n      Number(this.file_pos),\n      Number(this.file_pos + BigInt(size)),\n    );\n    this.file_pos += BigInt(slice.length);\n    return { ret: 0, data: slice };\n  }\n\n  fd_pread(size: number, offset: bigint): { ret: number; data: Uint8Array } {\n    const slice = this.file.data.slice(\n      Number(offset),\n      Number(offset + BigInt(size)),\n    );\n    return { ret: 0, data: slice };\n  }\n\n  fd_seek(offset: bigint, whence: number): { ret: number; offset: bigint } {\n    let calculated_offset: bigint;\n    switch (whence) {\n      case wasi.WHENCE_SET:\n        calculated_offset = offset;\n        break;\n      case wasi.WHENCE_CUR:\n        calculated_offset = this.file_pos + offset;\n        break;\n      case wasi.WHENCE_END:\n        calculated_offset = BigInt(this.file.data.byteLength) + offset;\n        break;\n      default:\n        return { ret: wasi.ERRNO_INVAL, offset: 0n };\n    }\n\n    if (calculated_offset < 0) {\n      return { ret: wasi.ERRNO_INVAL, offset: 0n };\n    }\n\n    this.file_pos = calculated_offset;\n    return { ret: 0, offset: this.file_pos };\n  }\n\n  fd_tell(): { ret: number; offset: bigint } {\n    return { ret: 0, offset: this.file_pos };\n  }\n\n  fd_write(data: Uint8Array): { ret: number; nwritten: number } {\n    if (this.file.readonly) return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n\n    if (this.file_pos + BigInt(data.byteLength) > this.file.size) {\n      const old = this.file.data;\n      this.file.data = new Uint8Array(\n        Number(this.file_pos + BigInt(data.byteLength)),\n      );\n      this.file.data.set(old);\n    }\n\n    this.file.data.set(data, Number(this.file_pos));\n    this.file_pos += BigInt(data.byteLength);\n    return { ret: 0, nwritten: data.byteLength };\n  }\n\n  fd_pwrite(data: Uint8Array, offset: bigint) {\n    if (this.file.readonly) return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n\n    if (offset + BigInt(data.byteLength) > this.file.size) {\n      const old = this.file.data;\n      this.file.data = new Uint8Array(Number(offset + BigInt(data.byteLength)));\n      this.file.data.set(old);\n    }\n\n    this.file.data.set(data, Number(offset));\n    return { ret: 0, nwritten: data.byteLength };\n  }\n\n  fd_filestat_get(): { ret: number; filestat: wasi.Filestat } {\n    return { ret: 0, filestat: this.file.stat() };\n  }\n}\n\nexport class OpenDirectory extends Fd {\n  dir: Directory;\n\n  constructor(dir: Directory) {\n    super();\n    this.dir = dir;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_seek(offset: bigint, whence: number): { ret: number; offset: bigint } {\n    return { ret: wasi.ERRNO_BADF, offset: 0n };\n  }\n\n  fd_tell(): { ret: number; offset: bigint } {\n    return { ret: wasi.ERRNO_BADF, offset: 0n };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_allocate(offset: bigint, len: bigint): number {\n    return wasi.ERRNO_BADF;\n  }\n\n  fd_fdstat_get(): { ret: number; fdstat: wasi.Fdstat | null } {\n    return { ret: 0, fdstat: new wasi.Fdstat(wasi.FILETYPE_DIRECTORY, 0) };\n  }\n\n  fd_readdir_single(cookie: bigint): {\n    ret: number;\n    dirent: wasi.Dirent | null;\n  } {\n    if (debug.enabled) {\n      debug.log(\"readdir_single\", cookie);\n      debug.log(cookie, this.dir.contents.keys());\n    }\n\n    if (cookie == 0n) {\n      return {\n        ret: wasi.ERRNO_SUCCESS,\n        dirent: new wasi.Dirent(1n, this.dir.ino, \".\", wasi.FILETYPE_DIRECTORY),\n      };\n    } else if (cookie == 1n) {\n      return {\n        ret: wasi.ERRNO_SUCCESS,\n        dirent: new wasi.Dirent(\n          2n,\n          this.dir.parent_ino(),\n          \"..\",\n          wasi.FILETYPE_DIRECTORY,\n        ),\n      };\n    }\n\n    if (cookie >= BigInt(this.dir.contents.size) + 2n) {\n      return { ret: 0, dirent: null };\n    }\n\n    const [name, entry] = Array.from(this.dir.contents.entries())[\n      Number(cookie - 2n)\n    ];\n\n    return {\n      ret: 0,\n      dirent: new wasi.Dirent(\n        cookie + 1n,\n        entry.ino,\n        name,\n        entry.stat().filetype,\n      ),\n    };\n  }\n\n  path_filestat_get(\n    flags: number,\n    path_str: string,\n  ): { ret: number; filestat: wasi.Filestat | null } {\n    const { ret: path_err, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_err, filestat: null };\n    }\n\n    const { ret, entry } = this.dir.get_entry_for_path(path);\n    if (entry == null) {\n      return { ret, filestat: null };\n    }\n\n    return { ret: 0, filestat: entry.stat() };\n  }\n\n  path_lookup(\n    path_str: string,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dirflags: number,\n  ): { ret: number; inode_obj: Inode | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, inode_obj: null };\n    }\n\n    const { ret, entry } = this.dir.get_entry_for_path(path);\n    if (entry == null) {\n      return { ret, inode_obj: null };\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, inode_obj: entry };\n  }\n\n  path_open(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    dirflags: number,\n    path_str: string,\n    oflags: number,\n    fs_rights_base: bigint,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fs_rights_inheriting: bigint,\n    fd_flags: number,\n  ): { ret: number; fd_obj: Fd | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, fd_obj: null };\n    }\n\n    // eslint-disable-next-line prefer-const\n    let { ret, entry } = this.dir.get_entry_for_path(path);\n    if (entry == null) {\n      if (ret != wasi.ERRNO_NOENT) {\n        return { ret, fd_obj: null };\n      }\n      if ((oflags & wasi.OFLAGS_CREAT) == wasi.OFLAGS_CREAT) {\n        // doesn't exist, but shall be created\n        const { ret, entry: new_entry } = this.dir.create_entry_for_path(\n          path_str,\n          (oflags & wasi.OFLAGS_DIRECTORY) == wasi.OFLAGS_DIRECTORY,\n        );\n        if (new_entry == null) {\n          return { ret, fd_obj: null };\n        }\n        entry = new_entry;\n      } else {\n        // doesn't exist, no such file\n        return { ret: wasi.ERRNO_NOENT, fd_obj: null };\n      }\n    } else if ((oflags & wasi.OFLAGS_EXCL) == wasi.OFLAGS_EXCL) {\n      // was supposed to be created exclusively, but exists already\n      return { ret: wasi.ERRNO_EXIST, fd_obj: null };\n    }\n    if (\n      (oflags & wasi.OFLAGS_DIRECTORY) == wasi.OFLAGS_DIRECTORY &&\n      entry.stat().filetype !== wasi.FILETYPE_DIRECTORY\n    ) {\n      // expected a directory but the file is not a directory\n      return { ret: wasi.ERRNO_NOTDIR, fd_obj: null };\n    }\n    return entry.path_open(oflags, fs_rights_base, fd_flags);\n  }\n\n  path_create_directory(path: string): number {\n    return this.path_open(\n      0,\n      path,\n      wasi.OFLAGS_CREAT | wasi.OFLAGS_DIRECTORY,\n      0n,\n      0n,\n      0,\n    ).ret;\n  }\n\n  path_link(path_str: string, inode: Inode, allow_dir: boolean): number {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return path_ret;\n    }\n\n    if (path.is_dir) {\n      return wasi.ERRNO_NOENT;\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, true);\n    if (parent_entry == null || filename == null) {\n      return parent_ret;\n    }\n\n    if (entry != null) {\n      const source_is_dir = inode.stat().filetype == wasi.FILETYPE_DIRECTORY;\n      const target_is_dir = entry.stat().filetype == wasi.FILETYPE_DIRECTORY;\n      if (source_is_dir && target_is_dir) {\n        if (allow_dir && entry instanceof Directory) {\n          if (entry.contents.size == 0) {\n            // Allow overwriting empty directories\n          } else {\n            return wasi.ERRNO_NOTEMPTY;\n          }\n        } else {\n          return wasi.ERRNO_EXIST;\n        }\n      } else if (source_is_dir && !target_is_dir) {\n        return wasi.ERRNO_NOTDIR;\n      } else if (!source_is_dir && target_is_dir) {\n        return wasi.ERRNO_ISDIR;\n      } else if (\n        inode.stat().filetype == wasi.FILETYPE_REGULAR_FILE &&\n        entry.stat().filetype == wasi.FILETYPE_REGULAR_FILE\n      ) {\n        // Overwriting regular files is fine\n      } else {\n        return wasi.ERRNO_EXIST;\n      }\n    }\n\n    if (!allow_dir && inode.stat().filetype == wasi.FILETYPE_DIRECTORY) {\n      return wasi.ERRNO_PERM;\n    }\n\n    parent_entry.contents.set(filename, inode);\n\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  path_unlink(path_str: string): { ret: number; inode_obj: Inode | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, inode_obj: null };\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, true);\n    if (parent_entry == null || filename == null) {\n      return { ret: parent_ret, inode_obj: null };\n    }\n\n    if (entry == null) {\n      return { ret: wasi.ERRNO_NOENT, inode_obj: null };\n    }\n\n    parent_entry.contents.delete(filename);\n\n    return { ret: wasi.ERRNO_SUCCESS, inode_obj: entry };\n  }\n\n  path_unlink_file(path_str: string): number {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return path_ret;\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, false);\n    if (parent_entry == null || filename == null || entry == null) {\n      return parent_ret;\n    }\n    if (entry.stat().filetype === wasi.FILETYPE_DIRECTORY) {\n      return wasi.ERRNO_ISDIR;\n    }\n    parent_entry.contents.delete(filename);\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  path_remove_directory(path_str: string): number {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return path_ret;\n    }\n\n    const {\n      ret: parent_ret,\n      parent_entry,\n      filename,\n      entry,\n    } = this.dir.get_parent_dir_and_entry_for_path(path, false);\n    if (parent_entry == null || filename == null || entry == null) {\n      return parent_ret;\n    }\n\n    if (\n      !(entry instanceof Directory) ||\n      entry.stat().filetype !== wasi.FILETYPE_DIRECTORY\n    ) {\n      return wasi.ERRNO_NOTDIR;\n    }\n    if (entry.contents.size !== 0) {\n      return wasi.ERRNO_NOTEMPTY;\n    }\n    if (!parent_entry.contents.delete(filename)) {\n      return wasi.ERRNO_NOENT;\n    }\n    return wasi.ERRNO_SUCCESS;\n  }\n\n  fd_filestat_get(): { ret: number; filestat: wasi.Filestat } {\n    return { ret: 0, filestat: this.dir.stat() };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_filestat_set_size(size: bigint): number {\n    return wasi.ERRNO_BADF;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_read(size: number): { ret: number; data: Uint8Array } {\n    return { ret: wasi.ERRNO_BADF, data: new Uint8Array() };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_pread(size: number, offset: bigint): { ret: number; data: Uint8Array } {\n    return { ret: wasi.ERRNO_BADF, data: new Uint8Array() };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  fd_write(data: Uint8Array): { ret: number; nwritten: number } {\n    return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n  }\n\n  fd_pwrite(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    data: Uint8Array,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    offset: bigint,\n  ): { ret: number; nwritten: number } {\n    return { ret: wasi.ERRNO_BADF, nwritten: 0 };\n  }\n}\n\nexport class PreopenDirectory extends OpenDirectory {\n  prestat_name: string;\n\n  constructor(name: string, contents: Map<string, Inode>) {\n    super(new Directory(contents));\n    this.prestat_name = name;\n  }\n\n  fd_prestat_get(): { ret: number; prestat: wasi.Prestat | null } {\n    return {\n      ret: 0,\n      prestat: wasi.Prestat.dir(this.prestat_name),\n    };\n  }\n}\n\nexport class File extends Inode {\n  data: Uint8Array;\n  readonly: boolean;\n\n  constructor(\n    data: ArrayBufferLike | ArrayLike<number>,\n    options?: Partial<{\n      readonly: boolean;\n    }>,\n  ) {\n    super();\n    this.data = new Uint8Array(data as ArrayLike<number>);\n    this.readonly = !!options?.readonly;\n  }\n\n  path_open(oflags: number, fs_rights_base: bigint, fd_flags: number) {\n    if (\n      this.readonly &&\n      (fs_rights_base & BigInt(wasi.RIGHTS_FD_WRITE)) ==\n        BigInt(wasi.RIGHTS_FD_WRITE)\n    ) {\n      // no write permission to file\n      return { ret: wasi.ERRNO_PERM, fd_obj: null };\n    }\n\n    if ((oflags & wasi.OFLAGS_TRUNC) == wasi.OFLAGS_TRUNC) {\n      if (this.readonly) return { ret: wasi.ERRNO_PERM, fd_obj: null };\n      this.data = new Uint8Array([]);\n    }\n\n    const file = new OpenFile(this);\n    if (fd_flags & wasi.FDFLAGS_APPEND) file.fd_seek(0n, wasi.WHENCE_END);\n    return { ret: wasi.ERRNO_SUCCESS, fd_obj: file };\n  }\n\n  get size(): bigint {\n    return BigInt(this.data.byteLength);\n  }\n\n  stat(): wasi.Filestat {\n    return new wasi.Filestat(this.ino, wasi.FILETYPE_REGULAR_FILE, this.size);\n  }\n}\n\nclass Path {\n  parts: string[] = [];\n  is_dir: boolean = false;\n\n  static from(path: string): { ret: number; path: Path | null } {\n    const self = new Path();\n    self.is_dir = path.endsWith(\"/\");\n\n    if (path.startsWith(\"/\")) {\n      return { ret: wasi.ERRNO_NOTCAPABLE, path: null };\n    }\n    if (path.includes(\"\\0\")) {\n      return { ret: wasi.ERRNO_INVAL, path: null };\n    }\n\n    for (const component of path.split(\"/\")) {\n      if (component === \"\" || component === \".\") {\n        continue;\n      }\n      if (component === \"..\") {\n        if (self.parts.pop() == undefined) {\n          return { ret: wasi.ERRNO_NOTCAPABLE, path: null };\n        }\n        continue;\n      }\n      self.parts.push(component);\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, path: self };\n  }\n\n  to_path_string(): string {\n    let s = this.parts.join(\"/\");\n    if (this.is_dir) {\n      s += \"/\";\n    }\n    return s;\n  }\n}\n\nexport class Directory extends Inode {\n  contents: Map<string, Inode>;\n  private parent: Directory | null = null;\n\n  constructor(contents: Map<string, Inode> | [string, Inode][]) {\n    super();\n    if (contents instanceof Array) {\n      this.contents = new Map(contents);\n    } else {\n      this.contents = contents;\n    }\n\n    for (const entry of this.contents.values()) {\n      if (entry instanceof Directory) {\n        entry.parent = this;\n      }\n    }\n  }\n\n  parent_ino(): bigint {\n    if (this.parent == null) {\n      return Inode.root_ino();\n    }\n    return this.parent.ino;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  path_open(oflags: number, fs_rights_base: bigint, fd_flags: number) {\n    return { ret: wasi.ERRNO_SUCCESS, fd_obj: new OpenDirectory(this) };\n  }\n\n  stat(): wasi.Filestat {\n    return new wasi.Filestat(this.ino, wasi.FILETYPE_DIRECTORY, 0n);\n  }\n\n  get_entry_for_path(path: Path): { ret: number; entry: Inode | null } {\n    let entry: Inode = this;\n    for (const component of path.parts) {\n      if (!(entry instanceof Directory)) {\n        return { ret: wasi.ERRNO_NOTDIR, entry: null };\n      }\n      const child = entry.contents.get(component);\n      if (child !== undefined) {\n        entry = child;\n      } else {\n        debug.log(component);\n        return { ret: wasi.ERRNO_NOENT, entry: null };\n      }\n    }\n\n    if (path.is_dir) {\n      if (entry.stat().filetype != wasi.FILETYPE_DIRECTORY) {\n        return { ret: wasi.ERRNO_NOTDIR, entry: null };\n      }\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, entry };\n  }\n\n  get_parent_dir_and_entry_for_path(\n    path: Path,\n    allow_undefined: boolean,\n  ): {\n    ret: number;\n    parent_entry: Directory | null;\n    filename: string | null;\n    entry: Inode | null;\n  } {\n    const filename = path.parts.pop();\n\n    if (filename === undefined) {\n      return {\n        ret: wasi.ERRNO_INVAL,\n        parent_entry: null,\n        filename: null,\n        entry: null,\n      };\n    }\n\n    const { ret: entry_ret, entry: parent_entry } =\n      this.get_entry_for_path(path);\n    if (parent_entry == null) {\n      return {\n        ret: entry_ret,\n        parent_entry: null,\n        filename: null,\n        entry: null,\n      };\n    }\n    if (!(parent_entry instanceof Directory)) {\n      return {\n        ret: wasi.ERRNO_NOTDIR,\n        parent_entry: null,\n        filename: null,\n        entry: null,\n      };\n    }\n    const entry: Inode | undefined | null = parent_entry.contents.get(filename);\n    if (entry === undefined) {\n      if (!allow_undefined) {\n        return {\n          ret: wasi.ERRNO_NOENT,\n          parent_entry: null,\n          filename: null,\n          entry: null,\n        };\n      } else {\n        return { ret: wasi.ERRNO_SUCCESS, parent_entry, filename, entry: null };\n      }\n    }\n\n    if (path.is_dir) {\n      if (entry.stat().filetype != wasi.FILETYPE_DIRECTORY) {\n        return {\n          ret: wasi.ERRNO_NOTDIR,\n          parent_entry: null,\n          filename: null,\n          entry: null,\n        };\n      }\n    }\n\n    return { ret: wasi.ERRNO_SUCCESS, parent_entry, filename, entry };\n  }\n\n  create_entry_for_path(\n    path_str: string,\n    is_dir: boolean,\n  ): { ret: number; entry: Inode | null } {\n    const { ret: path_ret, path } = Path.from(path_str);\n    if (path == null) {\n      return { ret: path_ret, entry: null };\n    }\n\n    let {\n      // eslint-disable-next-line prefer-const\n      ret: parent_ret,\n      // eslint-disable-next-line prefer-const\n      parent_entry,\n      // eslint-disable-next-line prefer-const\n      filename,\n      entry,\n    } = this.get_parent_dir_and_entry_for_path(path, true);\n    if (parent_entry == null || filename == null) {\n      return { ret: parent_ret, entry: null };\n    }\n\n    if (entry != null) {\n      return { ret: wasi.ERRNO_EXIST, entry: null };\n    }\n\n    debug.log(\"create\", path);\n    let new_child;\n    if (!is_dir) {\n      new_child = new File(new ArrayBuffer(0));\n    } else {\n      new_child = new Directory(new Map());\n    }\n    parent_entry.contents.set(filename, new_child);\n    entry = new_child;\n\n    return { ret: wasi.ERRNO_SUCCESS, entry };\n  }\n}\n\nexport class ConsoleStdout extends Fd {\n  private ino: bigint;\n  write: (buffer: Uint8Array) => void;\n\n  constructor(write: (buffer: Uint8Array) => void) {\n    super();\n    this.ino = Inode.issue_ino();\n    this.write = write;\n  }\n\n  fd_filestat_get(): { ret: number; filestat: wasi.Filestat } {\n    const filestat = new wasi.Filestat(\n      this.ino,\n      wasi.FILETYPE_CHARACTER_DEVICE,\n      BigInt(0),\n    );\n    return { ret: 0, filestat };\n  }\n\n  fd_fdstat_get(): { ret: number; fdstat: wasi.Fdstat | null } {\n    const fdstat = new wasi.Fdstat(wasi.FILETYPE_CHARACTER_DEVICE, 0);\n    fdstat.fs_rights_base = BigInt(wasi.RIGHTS_FD_WRITE);\n    return { ret: 0, fdstat };\n  }\n\n  fd_write(data: Uint8Array): { ret: number; nwritten: number } {\n    this.write(data);\n    return { ret: 0, nwritten: data.byteLength };\n  }\n\n  static lineBuffered(write: (line: string) => void): ConsoleStdout {\n    const dec = new TextDecoder(\"utf-8\", { fatal: false });\n    let line_buf = \"\";\n    return new ConsoleStdout((buffer) => {\n      line_buf += dec.decode(buffer, { stream: true });\n      const lines = line_buf.split(\"\\n\");\n      for (const [i, line] of lines.entries()) {\n        if (i < lines.length - 1) {\n          write(line);\n        } else {\n          line_buf = line;\n        }\n      }\n    });\n  }\n}\n"],"names":["debug","wasi","Fd","Inode","OpenFile","file","file_pos","fd_allocate","offset","len","size","new_data","Uint8Array","Number","set","data","ERRNO_SUCCESS","fd_fdstat_get","ret","fdstat","Fdstat","FILETYPE_REGULAR_FILE","fd_filestat_set_size","buffer","slice","fd_read","BigInt","length","fd_pread","fd_seek","whence","calculated_offset","WHENCE_SET","WHENCE_CUR","WHENCE_END","byteLength","ERRNO_INVAL","fd_tell","fd_write","readonly","ERRNO_BADF","nwritten","old","fd_pwrite","fd_filestat_get","filestat","stat","OpenDirectory","dir","FILETYPE_DIRECTORY","fd_readdir_single","cookie","enabled","log","contents","keys","dirent","Dirent","ino","parent_ino","name","entry","Array","from","entries","filetype","path_filestat_get","flags","path_str","path_err","path","Path","get_entry_for_path","path_lookup","dirflags","path_ret","inode_obj","path_open","oflags","fs_rights_base","fs_rights_inheriting","fd_flags","fd_obj","ERRNO_NOENT","OFLAGS_CREAT","new_entry","create_entry_for_path","OFLAGS_DIRECTORY","OFLAGS_EXCL","ERRNO_EXIST","ERRNO_NOTDIR","path_create_directory","path_link","inode","allow_dir","is_dir","parent_ret","parent_entry","filename","get_parent_dir_and_entry_for_path","source_is_dir","target_is_dir","Directory","ERRNO_NOTEMPTY","ERRNO_ISDIR","ERRNO_PERM","path_unlink","delete","path_unlink_file","path_remove_directory","PreopenDirectory","prestat_name","fd_prestat_get","prestat","Prestat","File","options","RIGHTS_FD_WRITE","OFLAGS_TRUNC","FDFLAGS_APPEND","Filestat","parts","self","endsWith","startsWith","ERRNO_NOTCAPABLE","includes","component","split","pop","undefined","push","to_path_string","s","join","parent","Map","values","root_ino","child","get","allow_undefined","entry_ret","new_child","ArrayBuffer","ConsoleStdout","write","issue_ino","FILETYPE_CHARACTER_DEVICE","lineBuffered","dec","TextDecoder","fatal","line_buf","decode","stream","lines","i","line"],"mappings":"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"}
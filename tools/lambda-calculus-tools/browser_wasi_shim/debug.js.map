{"version":3,"sources":["../src/debug.ts"],"sourcesContent":["class Debug {\n  prefix?: string = \"wasi:\";\n  log: (...args: unknown[]) => void;\n\n  constructor(private isEnabled: boolean) {\n    this.enable(isEnabled);\n  }\n\n  // Recreate the logger function with the new enabled state.\n  enable(enabled?: boolean) {\n    this.log = createLogger(\n      enabled === undefined ? true : enabled,\n      this.prefix,\n    );\n  }\n\n  // Getter for the private isEnabled property.\n  get enabled(): boolean {\n    return this.isEnabled;\n  }\n}\n\n// The createLogger() creates either an empty function or a bound console.log\n// function so we can retain accurate line lumbers on Debug.log() calls.\nfunction createLogger(\n  enabled: boolean,\n  prefix?: string,\n): (...args: unknown[]) => void {\n  if (enabled) {\n    const a = console.log.bind(console, \"%c%s\", \"color: #265BA0\", prefix);\n    return a;\n  } else {\n    return () => {};\n  }\n}\n\nexport const debug = new Debug(false);\n"],"names":["Debug","prefix","log","isEnabled","enable","enabled","createLogger","undefined","a","console","bind","debug"],"mappings":"AAAA,IAAA,AAAMA,MAAN,MAAMA,eACJC,CAAAA,OAAkB,OAAQ,AAC1BC,CAAAA,GAAkC,AAElC,aAAY,AAAQC,SAAkB,CAAE,MAApBA,UAAAA,UAClB,IAAI,CAACC,MAAM,CAACD,UACd,CAGAC,OAAOC,OAAiB,CAAE,CACxB,IAAI,CAACH,GAAG,CAAGI,aACTD,UAAYE,UAAY,KAAOF,QAC/B,IAAI,CAACJ,MAAM,CAEf,CAGA,IAAII,SAAmB,CACrB,OAAO,IAAI,CAACF,SAAS,AACvB,CACF,EAIA,SAASG,aACPD,OAAgB,CAChBJ,MAAe,EAEf,GAAII,QAAS,CACX,MAAMG,EAAIC,QAAQP,GAAG,CAACQ,IAAI,CAACD,QAAS,OAAQ,iBAAkBR,QAC9D,OAAOO,CACT,KAAO,CACL,MAAO,KAAO,CAChB,CACF,CAEA,OAAO,MAAMG,MAAQ,IAAIX,MAAM,MAAO"}